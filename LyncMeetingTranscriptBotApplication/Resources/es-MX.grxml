<?xml version="1.0" encoding="utf-8"?>
<!--
****************************************************************
** Copyright (c) Microsoft Corporation. All rights reserved. **
****************************************************************
The example phone numbers, social security numbers, and credit card numbers depicted
in the examples herein are fictitious. No association with any real company, organization,
product, domain name, email address, logo, person, places, or events is intended or should be
inferred.
-->
<grammar xml:lang="es-MX" version="1.0" mode="voice" xmlns="http://www.w3.org/2001/06/grammar" xmlns:sapi="http://schemas.microsoft.com/Speech/2002/06/SRGSExtensions" tag-format="semantics/1.0">
<tag><![CDATA[
 function FutureMonth(day) {
 var thisDate = new Date();
 var thisMonth = thisDate.getMonth() + 1;
 
 thisMonth = (day < thisDate.getDate()) ? thisMonth + 1 : thisMonth;
 thisMonth = (thisMonth < 13) ? thisMonth : 1;
 
 return thisMonth;
 }
 
    
 function PastMonth(day) {
 var thisDate = new Date();
 var thisMonth = thisDate.getMonth() + 1;
 
 thisMonth = (day > thisDate.getDate()) ? thisMonth - 1 : thisMonth;
 thisMonth = (thisMonth > 1) ? thisMonth : 12;
 
 return thisMonth;
 }
 
    
 function FutureYear(month, day) {
 var thisDate = new Date();
 var thisMonth = thisDate.getMonth() + 1;
 var thisDay = thisDate.getDay() + 1;
 var thisYear = thisDate.getFullYear();
 
 thisYear = ((month > thisMonth) || (month == thisMonth && day >= thisDay)) ? thisYear : thisYear + 1;
 
 return thisYear;
 }
 
    
 function PastYear(month, day) {
 var thisDate = new Date();
 var thisMonth = thisDate.getMonth() + 1;
 var thisDay = thisDate.getDay() + 1;
 var thisYear = thisDate.getFullYear();
 
 thisYear = ((month < thisMonth) || (month == thisMonth && day <= thisDay)) ? thisYear : thisYear - 1;
 
 return thisYear;
 }
 
    
 function IsValidDate(month, day, year) {
 var oDate = new Date();
 var retVal = "true";
 
 if ((year < 1900) || (year > 2099))
 {
 retVal = "false";
 }
 
 oDate.setFullYear(year); 
 oDate.setDate(1);
 oDate.setMonth(month - 1);
 oDate.setDate(day);
 
 if (day != oDate.getDate())
 retVal = "false";
 
 return retVal;
 }
 
  
 function GetDateFromOffset(offset) {
 var thisDate = new Date();
 var newDate = new Date(thisDate.valueOf() + (offset * 60 * 60 * 24 * 1000) );
 return newDate;
 }
 
    
 function GetOffsetFromWeekday(weekday, weekOffset) {
        var oToday=new Date();
        var todayOfWeek = oToday.getDay() + 1;
        if (weekOffset=="next") {
            if (weekday >= todayOfWeek) { 
 return (weekday - todayOfWeek); 
 }
            else { 
 return 7 - (todayOfWeek - weekday); 
 }
        } 
 else if (weekOffset=="previous") {
            if (weekday < todayOfWeek) { 
 return (weekday - todayOfWeek); 
 }
            else { 
 return ((weekday - todayOfWeek) - 7); 
 }
        } 
 else return 0;
    }
 
    
 // only allows hours between 1 and 12
 // if ampm is empty then the time is calculated to be am if hour is greater than 7 and pm otherwise
 // returns a value between 0 and 23
 function Hour24(hour, ampm) {
        var retVal = hour;
 
 if ((hour > 12) || (hour < 0))
 return retVal;
 
 if (ampm == "AM")
 {
 if (hour == 12)
 retVal = 0;
 }
 else if (ampm == "PM")
 {
 if (hour < 12)
 retVal = hour + 12;
 }
 else
 {
 if (hour < 7)
 retVal = hour + 12;
 }
 
 return retVal;
 }
 
    
 // only allows hours between 1 and 12
 // returns a value between 0 and 23
 function AlternateHour24(hour) {
        var retVal = hour;
 
 if ((hour > 12) || (hour < 0))
 return retVal;
 
 if (hour == 12)
 retVal = 0;

 else if (hour > 6)
 retVal = hour + 12;
 
 return retVal;
 }
 
    
 // only allows offsets between -59 and +59
 function NormalizeHour(hour, offset) {
        var retVal = hour;
 
 if (Math.abs(offset) > 59)
 return hour;
 
 if ((hour > 23) || (hour < 0))
 return hour;
 
 retVal = (offset < 0) ? retVal - 1 : retVal;
 retVal = (retVal < 0) ? 23 : retVal;
 return retVal;
    }
 
    
 // only allows offsets between -59 and +59
 function NormalizeMinute(offset) {
        var retVal = 0;
 
 if (Math.abs(offset) > 59)
 return 0;
 
 retVal = (offset < 0) ? 60 + offset: offset;
 return retVal;
    }
]]></tag>
 
  <!--
    Category: Confirmation
    Description: Confirmation rules provide access to simple dialog confirmation sets. These include Yes, No and Cancel
        subclasses. The responses are generic and are independent of the prompt used to solicit the response
    -->
  <!-- $Confirmation__value: string ["Yes", "No", "Cancel"] -->
  <rule id="Confirmation" scope="public">
    <example> sí </example>
    <example> no </example>
    <example> cancele </example>
    <one-of>
      <item>
        <ruleref uri="#Confirmation_Yes" />
      </item>
      <item>
        <ruleref uri="#Confirmation_No" />
      </item>
      <item>
        <ruleref uri="#Confirmation_Cancel" />
      </item>
    </one-of>
    <tag> out = rules.latest(); </tag>
  </rule>
  <!-- $Confirmation_YesNo._value: string ["Yes", "No"] -->
  <rule id="Confirmation_YesNo" scope="public">
    <example> sí </example>
    <example> no </example>
    <one-of>
      <item>
        <ruleref uri="#Confirmation_Yes" />
      </item>
      <item>
        <ruleref uri="#Confirmation_No" />
      </item>
    </one-of>
    <tag> out = rules.latest() </tag>
  </rule>
  <!-- $Confirmation_Yes._value: string ["Yes"] -->
  <rule id="Confirmation_Yes" scope="public">
    <example> sí </example>
    <one-of>
      <item>
                sí <item repeat="0-1">por favor</item></item>
      <item> okey </item>
    </one-of>
    <tag> out._value = "Yes"; </tag>
  </rule>
  <!-- $Confirmation_No._value: string ["No"] -->
  <rule id="Confirmation_No" scope="public">
    <example> no </example>
        no <item repeat="0-1"> gracias </item><tag> out._value = "No"; </tag></rule>
  <!-- $Confirmation_Cancel._value: string ["Cancel"] -->
  <rule id="Confirmation_Cancel" scope="public">
    <example> cancele </example>
    <example> cancela </example>
    <example> pare </example>
    <one-of>
      <item> cancele </item>
      <item> cancela </item>
      <item> pare </item>
      <item> regrese </item>
    </one-of>
    <tag> out._value = "Cancel"; </tag>
  </rule>
  <!--
    Category: Cardinal
    Description: Cardinal rules describe numeric values on the range of zero to 1 million. The numeric range is encoded in
        the rule name. For example, Cardinal_1_to_9 will contain numbers on the range of 1...9 (i.e. "uno", "dos", ..., "nueve").
        The <Cardinal> rule covers the full range.
        All return an integer _value semantic item.
    -->
  <!-- $Cardinal._value: integer [0...1,000,000] -->
  <rule id="Cardinal" scope="public">
    <example> uno </example>
    <example> mil diez </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_1_to_999" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_1000_to_999999" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <item repeat="0-1"> un </item>
        <item> Millón </item>
        <tag> out._value = 1000000;</tag>
      </item>
    </one-of>
  </rule>
  <!-- $Cardinal_0._value: integer [0] -->
  <rule id="Cardinal_0" scope="public">
    <example> cero </example>
    <item> cero </item>
    <tag> out._value = 0; </tag>
  </rule>
  <!-- $Cardinal_0_to_9._value: integer [0...9] -->
  <rule id="Cardinal_0_to_9" scope="public">
    <example> uno </example>
    <example> tres </example>
    <example> seis </example>
    <example> ocho </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_1_to_9" />
        <tag> out = rules.latest(); </tag>
      </item>
      <!--
            <item>
                <ruleref uri="#Cardinal_2_to_9" />
                <tag> $ = $$; </tag> </item>
            -->
    </one-of>
  </rule>
  <!-- $Cardinal_0_to_10._value: integer [0...10] -->
  <rule id="Cardinal_0_to_10" scope="public">
    <example> uno </example>
    <example> tres </example>
    <example> seis </example>
    <example> ocho </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
                diez <tag> out._value = 10; </tag></item>
    </one-of>
  </rule>
  <!-- $Cardinal_0_to_100._value: integer [0...100] -->
  <rule id="Cardinal_0_to_100" scope="public">
    <example> uno </example>
    <example> tres </example>
    <example> seis </example>
    <example> ciento </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_1_to_99" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <one-of>
          <item> ciento </item>
          <item> cien </item>
        </one-of>
        <tag> out._value = 100; </tag>
      </item>
    </one-of>
  </rule>
  <!-- $Cardinal_0_to_1000._value: integer [0...1000] -->
  <rule id="Cardinal_0_to_1000" scope="public">
    <example> seis </example>
    <example> ciento </example>
    <example> mil </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_1_to_999" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
                mil <tag> out._value = 1000; </tag></item>
    </one-of>
  </rule>
  <!-- $Cardinal_0_to_10000._value: integer [0...10000] -->
  <rule id="Cardinal_0_to_10000" scope="public">
    <example> seis </example>
    <example> ciento </example>
    <example> diez mil </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_1_to_9999" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
                diez mil <tag> out._value = 10000; </tag></item>
    </one-of>
  </rule>
  <!-- $Cardinal_1._value: integer [1] -->
  <rule id="Cardinal_1" scope="public">
    <one-of>
      <item>
        uno <tag> out._value = 1; </tag>
      </item>
    </one-of>
  </rule>
  <!-- $Cardinal_1_to_9._value: integer [1...9] -->
  <rule id="Cardinal_1_to_9" scope="public">
    <example> uno </example>
    <example> tres </example>
    <example> seis </example>
    <example> ocho </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_1" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_2_to_9" />
        <tag> out = rules.latest(); </tag>
      </item>
    </one-of>
  </rule>
  <!-- $Cardinal_1_to_99._value: integer [1...99] -->
  <rule id="Cardinal_1_to_99" scope="public">
    <example> tres </example>
    <example> seis </example>
    <example> ocho </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_1_to_9" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_10_to_19" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_20_to_99" />
        <tag> out = rules.latest(); </tag>
      </item>
    </one-of>
  </rule>
  <!-- $Cardinal_2_to_99._value: integer [2...99] -->
  <rule id="Cardinal_2_to_99" scope="public">
    <example> tres </example>
    <example> seis </example>
    <example> ocho </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_2_to_9" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_10_to_19" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_20_to_99" />
        <tag> out = rules.latest(); </tag>
      </item>
    </one-of>
  </rule>
  <!-- $Cardinal_1_to_999._value: integer [1...999] -->
  <rule id="Cardinal_1_to_999" scope="public">
    <example> uno </example>
    <example> trece </example>
    <example> sesenta </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_1_to_99" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_100_to_999" />
        <tag> out = rules.latest(); </tag>
      </item>
    </one-of>
  </rule>
  <!-- $Cardinal_2_to_999._value: integer [1...999] -->
  <rule id="Cardinal_2_to_999" scope="public">
    <example> dos </example>
    <example> trece </example>
    <example> sesenta </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_2_to_99" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_100_to_999" />
        <tag> out = rules.latest(); </tag>
      </item>
    </one-of>
  </rule>
  <!-- $Cardinal_1_to_9999._value: integer [1...999] -->
  <rule id="Cardinal_1_to_9999" scope="public">
    <example> uno </example>
    <example> trece </example>
    <example> sesenta </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_1_to_999" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <item> cien </item>
        <tag> out._value = 100; </tag>
      </item>
      <item>
        <tag> out._value = 1; </tag>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_2_to_9" />
          <tag> out._value = rules.latest()._value; </tag>
        </item>
        <item> mil </item>
        <tag> out._value = out._value*1000; </tag>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_1_to_999" />
          <tag> out._value = rules.latest()._value + out._value; </tag>
        </item>
      </item>
    </one-of>
  </rule>
  <!-- $Cardinal_2_to_9._value: integer [2...9] -->
  <rule id="Cardinal_2_to_9" scope="public">
    <example> dos </example>
    <example> cuatro </example>
    <example> siete </example>
    <one-of>
      <item>
                dos <tag> out._value = 2; </tag></item>
      <item>
                tres <tag> out._value = 3; </tag></item>
      <item>
                cuatro <tag> out._value = 4; </tag></item>
      <item>
                cinco <tag> out._value = 5; </tag></item>
      <item>
                seis <tag> out._value = 6; </tag></item>
      <item>
                siete <tag> out._value = 7; </tag></item>
      <item>
                ocho <tag> out._value = 8; </tag></item>
      <item>
                nueve <tag> out._value = 9; </tag></item>
    </one-of>
  </rule>
  <!-- $Cardinal_10_to_19._value: integer [10...19] -->
  <rule id="Cardinal_10_to_19" scope="public">
    <example> dieciséis </example>
    <example> doce </example>
    <example> catorce </example>
    <one-of>
      <item>
                diez <tag> out._value = 10; </tag></item>
      <item>
                once <tag> out._value = 11; </tag></item>
      <item>
                doce <tag> out._value = 12; </tag></item>
      <item>
                trece <tag> out._value = 13; </tag></item>
      <item>
                catorce <tag> out._value = 14; </tag></item>
      <item>
                quince <tag> out._value = 15; </tag></item>
      <item>
                dieciséis <tag> out._value = 16; </tag></item>
      <item>
                diecisiete <tag> out._value = 17; </tag></item>
      <item>
                dieciocho <tag> out._value = 18; </tag></item>
      <item>
                diecinueve <tag> out._value = 19; </tag></item>
    </one-of>
  </rule>
  <!-- $Cardinal_10_to_99._value: integer [10...99] -->
  <rule id="Cardinal_10_to_99" scope="public">
    <example> doce </example>
    <example> setenta y nueve </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_10_to_19" />
      </item>
      <item>
        <ruleref uri="#Cardinal_20_to_99" />
      </item>
    </one-of>
    <tag> out._value = rules.latest()._value; </tag>
  </rule>
  <rule id="Cardinal_20_to_29" scope="public">
    <one-of>
      <item>
                veinte <tag> out._value = 20; </tag></item>
      <item>
                veintiuno <tag> out._value = 21; </tag></item>
      <item>
                veintiún <tag> out._value = 21; </tag></item>
      <item>
                veintiuna <tag> out._value = 21; </tag></item>
      <item>
                veintidós <tag> out._value = 22; </tag></item>
      <item>
                veintitrés <tag> out._value = 23; </tag></item>
      <item>
                veinticuatro <tag> out._value = 24; </tag></item>
      <item>
                veinticinco <tag> out._value = 25; </tag></item>
      <item>
                veintiséis <tag> out._value = 26; </tag></item>
      <item>
                veintisiete <tag> out._value = 27; </tag></item>
      <item>
                veintiocho <tag> out._value = 28; </tag></item>
      <item>
                veintinueve <tag> out._value = 29; </tag></item>
    </one-of>
  </rule>
  <!-- $Cardinal_20_to_99._value: integer [20...99] -->
  <rule id="Cardinal_20_to_99" scope="public">
    <example> veinte </example>
    <example> treinta </example>
    <example> treinta y uno </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_20_to_29" />
        <tag> out._value = rules.latest()._value </tag>
      </item>
      <item>
        <one-of>
          <item>
                        treinta <tag> out._value = 30; </tag></item>
          <item>
                        cuarenta <tag> out._value = 40; </tag></item>
          <item>
                        cincuenta <tag> out._value = 50; </tag></item>
          <item>
                        sesenta <tag> out._value = 60; </tag></item>
          <item>
                        setenta <tag> out._value = 70; </tag></item>
          <item>
                        ochenta <tag> out._value = 80; </tag></item>
          <item>
                        noventa <tag> out._value = 90; </tag></item>
        </one-of>
        <item repeat="0-1">
          <item> y </item>
          <ruleref uri="#Cardinal_1_to_9" />
          <tag> out._value = out._value + rules.latest()._value </tag>
        </item>
      </item>
    </one-of>
  </rule>
  <!-- $Cardinal_100_to_999._value: integer [100...999] -->
  <rule id="Cardinal_100_to_999" scope="public">
    <example> tres cientas </example>
    <one-of>
      <item> cien <tag> out._value = 100; </tag> </item>
      <item> doscientos <tag> out._value = 200; </tag> </item>
      <item> trescientos <tag> out._value = 300; </tag> </item>
      <item> cuatrocientos <tag> out._value = 400; </tag> </item>
      <item> quinientos <tag> out._value = 500; </tag> </item>
      <item> seiscientos <tag> out._value = 600; </tag> </item>
      <item> setecientos <tag> out._value = 700; </tag> </item>
      <item> ochocientos  <tag> out._value = 800; </tag> </item>
      <item> novecientos <tag> out._value = 900; </tag> </item>
      <item>
        <one-of>
            <item> ciento <tag> out._value = 100; </tag> </item>
            <item> doscientos <tag> out._value = 200; </tag> </item>
            <item> trescientos <tag> out._value = 300; </tag> </item>
            <item> cuatrocientos <tag> out._value = 400; </tag> </item>
            <item> quinientos <tag> out._value = 500; </tag> </item>
            <item> seiscientos <tag> out._value = 600; </tag> </item>
            <item> setecientos <tag> out._value = 700; </tag> </item>
            <item> ochocientos  <tag> out._value = 800; </tag> </item>
            <item> novecientos <tag> out._value = 900; </tag> </item>
        </one-of>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_1_to_99" />
          <tag> out._value = out._value + rules.latest()._value; </tag>
        </item>
      </item>
    </one-of>
  </rule>
  <!-- $Cardinal_1000_to_999999._value: integer [1000...999999] -->
  <rule id="Cardinal_1000_to_999999" scope="public">
    <example> cinco mil </example>
    <example> nueve mil ciento veinte </example>
    <tag> out._value = 1; </tag>
    <one-of>
      <item>
                mil
                <item repeat="0-1"><ruleref uri="#Cardinal_1_to_999" /><tag> out._value = 1000 + rules.latest()._value; </tag></item></item>
      <item>
        <ruleref uri="#Cardinal_1_to_999" />
        <tag> out._value = rules.latest()._value * 1000; </tag>
                mil
                <item repeat="0-1"><ruleref uri="#Cardinal_1_to_999" /><tag> out._value = out._value + rules.latest()._value; </tag></item></item>
    </one-of>
  </rule>
  <!--
    Category: Ordinal
    Description: Ordinal rules describe numeric ordering values on the range of 1 (primero) to 100 (centésimo).
        The numeric range is encoded in the rule name. For example, Ordinal_1_to_9 will contain ordinals: primero, segundo, tercero, ..., noveno.
        The <Ordinal> rule covers the full range.
        All return an integer _value semantic item.
    -->
  <!-- $Ordinal._value: integer [1...100] -->
  <rule id="Ordinal" scope="public">
    <example> primero </example>
    <example> séptimo </example>
    <example> octavo </example>
    <one-of>
      <item>
        <ruleref uri="#Ordinal_1_to_9" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Ordinal_10_to_19" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
        <ruleref uri="#Ordinal_20_to_99" />
        <tag> out = rules.latest(); </tag>
      </item>
      <item>
                centésimo <tag> out._value = 100; </tag></item>
      <item>
                centésima <tag> out._value = 100; </tag></item>
    </one-of>
  </rule>
  <!-- $Ordinal_1_to_9._value: integer [1...9] -->
  <rule id="Ordinal_1_to_9" scope="public">
    <example> primero </example>
    <example> sexto </example>
    <one-of>
      <item>
                primero <tag> out._value = 1; </tag></item>
      <item>
                primer <tag> out._value = 1; </tag></item>
      <item>
                primera <tag> out._value = 1; </tag></item>
      <item>
                segundo <tag> out._value = 2; </tag></item>
      <item>
                segunda <tag> out._value = 2; </tag></item>
      <item>
                tercero <tag> out._value = 3; </tag></item>
      <item>
                tercer <tag> out._value = 3; </tag></item>
      <item>
                tercera <tag> out._value = 3; </tag></item>
      <item>
                cuarto <tag> out._value = 4; </tag></item>
      <item>
                cuarta <tag> out._value = 4; </tag></item>
      <item>
                quinto <tag> out._value = 5; </tag></item>
      <item>
                quinta <tag> out._value = 5; </tag></item>
      <item>
                sexto <tag> out._value = 6; </tag></item>
      <item>
                sexta <tag> out._value = 6; </tag></item>
      <item>
                séptimo <tag> out._value = 7; </tag></item>
      <item>
                séptima <tag> out._value = 7; </tag></item>
      <item>
                octavo <tag> out._value = 8; </tag></item>
      <item>
                octava <tag> out._value = 8; </tag></item>
      <item>
                noveno <tag> out._value = 9; </tag></item>
      <item>
                novena <tag> out._value = 9; </tag></item>
    </one-of>
  </rule>
  <!-- $Ordinal_10_to_19._value: integer [10...19] -->
  <rule id="Ordinal_10_to_19" scope="public">
    <example> decimocuarto </example>
    <example> decimoctavo </example>
    <one-of>
      <item>
                décimo <tag> out._value = 10; </tag></item>
      <item>
                décima <tag> out._value = 10; </tag></item>
      <item>
                undécimo <tag> out._value = 11; </tag></item>
      <item>
                undécima <tag> out._value = 11; </tag></item>
      <item>
                duodécimo <tag> out._value = 12; </tag></item>
      <item>
                duodécima <tag> out._value = 12; </tag></item>
      <item>
                decimotercero <tag> out._value = 13; </tag></item>
      <item>
                decimotercera <tag> out._value = 13; </tag></item>
      <item>
                decimocuarto <tag> out._value = 14; </tag></item>
      <item>
                decimocuarta <tag> out._value = 14; </tag></item>
      <item>
                decimoquinto <tag> out._value = 15; </tag></item>
      <item>
                decimoquinta <tag> out._value = 15; </tag></item>
      <item>
                decimosexto <tag> out._value = 16; </tag></item>
      <item>
                decimosexta <tag> out._value = 16; </tag></item>
      <item>
                decimoséptimo <tag> out._value = 17; </tag></item>
      <item>
                decimoséptima <tag> out._value = 17; </tag></item>
      <item>
                decimoctavo <tag> out._value = 18; </tag></item>
      <item>
                decimoctava <tag> out._value = 18; </tag></item>
      <item>
                decimonoveno <tag> out._value = 19; </tag></item>
      <item>
                decimonovena <tag> out._value = 19; </tag></item>
    </one-of>
  </rule>
  <!-- $Ordinal_20_to_99._value: integer [20...99] -->
  <rule id="Ordinal_20_to_99" scope="public">
    <example> septuagésimo </example>
    <example> septuagésima </example>
    <one-of>
      <item>
                vigésimo <tag> out._value = 20; </tag></item>
      <item>
                trigésimo <tag> out._value = 30; </tag></item>
      <item>
                cuadragésimo <tag> out._value = 40; </tag></item>
      <item>
                quincuagésimo <tag> out._value = 50; </tag></item>
      <item>
                sexagésimo <tag> out._value = 60; </tag></item>
      <item>
                septuagésimo <tag> out._value = 70; </tag></item>
      <item>
                octogésimo <tag> out._value = 80; </tag></item>
      <item>
                nonagésimo <tag> out._value = 90; </tag></item>
      <item>
                vigésima <tag> out._value = 20; </tag></item>
      <item>
                trigésima <tag> out._value = 30; </tag></item>
      <item>
                cuadragésima <tag> out._value = 40; </tag></item>
      <item>
                quincuagésima <tag> out._value = 50; </tag></item>
      <item>
                sexagésima <tag> out._value = 60; </tag></item>
      <item>
                septuagésima <tag> out._value = 70; </tag></item>
      <item>
                octogésima <tag> out._value = 80; </tag></item>
      <item>
                nonagésima <tag> out._value = 90; </tag></item>
    </one-of>
    <item repeat="0-1">
      <ruleref uri="#Ordinal_1_to_9" />
      <tag> out._value = out._value + rules.latest()._value; </tag>
    </item>
  </rule>
  <!--
  Category: Number
  Description: Number rules describe numeric values on the range of - 1 million to 1 million including two decimal points. The numeric range is encoded in
    the rule name. For example, Number_0_to_1000 will contain numbers on the range of 0...1000, like 5.65.
    The <Number> rule covers the full range.
    All return an float _value semantic item.
-->
  <!-- $Number._value: integer [-1,000,000.00 ... 1,000,000.00] -->
  <rule id="Number" scope="public">
    <example> cero coma decimal cinco </example>
    <example> más cero punto nueve </example>
    <example> menos ciento veinticinco coma decimal ocho </example>
    <tag> var plusminus = 1;</tag>
    <item repeat="0-1">
      <one-of>
        <item>
                    más <tag>plusminus = 1;</tag></item>
        <item>
                    menos <tag>plusminus = -1;</tag></item>
      </one-of>
    </item>
    <one-of>
      <item>
        <one-of>
          <item>
            <ruleref uri="#Cardinal_0" />
            <tag> out = rules.latest(); </tag>
          </item>
          <item>
            <ruleref uri="#Cardinal_1_to_999" />
            <tag> out = rules.latest(); </tag>
          </item>
          <item>
            <ruleref uri="#Cardinal_1000_to_999999" />
            <tag> out = rules.latest(); </tag>
          </item>
        </one-of>
        <item repeat="0-1">
          <one-of>
            <item>coma decimal</item>
            <item>punto</item>
          </one-of>
          <one-of>
            <item>
              <ruleref uri="#Cardinal_0_to_9" />
              <tag> out._value = out._value + rules.latest()._value / 10; </tag>
              <item repeat="0-1">
                <ruleref uri="#Cardinal_0_to_9" />
                <tag> out._value = out._value + rules.latest()._value / 100; </tag>
              </item>
            </item>
            <item>
              <ruleref uri="#Cardinal_10_to_99" />
              <tag> out._value = out._value + rules.latest()._value / 100; </tag>
            </item>
          </one-of>
        </item>
        <tag> out._value = out._value * plusminus; </tag>
      </item>
      <item>
        <item repeat="0-1"> un </item>
        <item> Millón </item>
        <tag>
                    out._value = 1000000;
                    out._value = out._value * plusminus;
                </tag>
      </item>
    </one-of>
  </rule>
  <!-- $Number_1000_to_1000._value: integer [-1,000.00 ... 1,000.00] -->
  <rule id="Number_1000_to_1000" scope="public">
    <example> cero coma decimal cinco </example>
    <example> más cero punto nueve </example>
    <example> menos ciento veinticinco coma decimal ocho </example>
    <tag> var plusminus = 1;</tag>
    <item repeat="0-1">
      <one-of>
        <item>
                    más <tag>plusminus = 1;</tag></item>
        <item>
                    menos <tag>plusminus = -1;</tag></item>
      </one-of>
    </item>
    <one-of>
      <item>
        <one-of>
          <item>
            <ruleref uri="#Cardinal_0" />
            <tag> out = rules.latest(); </tag>
          </item>
          <item>
            <ruleref uri="#Cardinal_1_to_999" />
            <tag> out = rules.latest(); </tag>
          </item>
        </one-of>
        <item repeat="0-1">
          <one-of>
            <item>coma decimal</item>
            <item>punto</item>
          </one-of>
          <one-of>
            <item>
              <ruleref uri="#Cardinal_0_to_9" />
              <tag> out._value = out._value + rules.latest()._value / 10; </tag>
              <item repeat="0-1">
                <ruleref uri="#Cardinal_0_to_9" />
                <tag> out._value = out._value + rules.latest()._value / 100; </tag>
              </item>
            </item>
            <item>
              <ruleref uri="#Cardinal_10_to_99" />
              <tag> out._value = out._value + rules.latest()._value / 100; </tag>
            </item>
          </one-of>
        </item>
        <tag> out._value = out._value * plusminus; </tag>
      </item>
      <item>
                mil
                <tag>
                    out._value = 1000;
                    out._value = out._value * plusminus;
                </tag></item>
    </one-of>
  </rule>
  <!--
    Category: DigitBlock
    Description: DigitBlock rules describe sequences of digit strings in length from 2 to 4. For example 73 is "siete tres",
        7305 is "siete tres cero cinco", etc.
        The length of the DigitBlock is encoded in the rule name. For example, DigitBlock_2Digits provides for digit strings of
        length 2. E.g. "siete tres", "veinticinco",etc.

        All return a string _value semantic item giving the digit string
    -->
  <!-- $DigitBlock_2Digits._value: string [length 2] -->
  <rule id="DigitBlock_2Digits" scope="public">
    <example> cero cinco </example>
    <example> cero cero </example>
    <example> veinticinco </example>
    <example> siete tres </example>
    <tag> out._value = ''; </tag>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_10_to_99" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
      </item>
    </one-of>
  </rule>
  <!-- $DigitBlock_3Digits._value: string [length 3] -->
  <rule id="DigitBlock_3Digits" scope="public">
    <example> uno uno uno </example>
    <example> dos veinticinco </example>
    <example> cero cero siete </example>
    <tag> out._value = ''; </tag>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#DigitBlock_2Digits" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
      </item>
      <item>
                cien
                <tag> out._value = '100'; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_100_to_999" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
      </item>
    </one-of>
  </rule>
  <!-- $DigitBlock_4Digits._value: string [length 4] -->
  <rule id="DigitBlock_4Digits" scope="public">
    <example> sesenta y cinco cero dos </example>
    <example> ocho mil </example>
    <example> sesenta y seis setenta y siete </example>
    <example> Cero uno veintitrés </example>
    <example> veinte cero cinco </example>
    <tag> out._value = '' ;</tag>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_10_to_99" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#Cardinal_10_to_99" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_10_to_99" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#Cardinal_0" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_0" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#Cardinal_10_to_99" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_0_to_9" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#Cardinal_100_to_999" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
      </item>
      <item>
        <item> mil </item>
        <tag> out._value = '1000'; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_2_to_9" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <item> mil </item>
        <tag> out._value = out._value + '000'; </tag>
      </item>
      <item>
          <one-of>
              <item>
                <item> mil </item>
                <tag> out._value = '1'; </tag>
              </item>
              <item>
                <ruleref uri="#Cardinal_2_to_9" />
                <tag> out._value = out._value + rules.latest()._value; </tag>
                <item> mil </item>
              </item>
          </one-of>
          <item repeat="0-1">
          <one-of>
              <item>
                <ruleref uri="#Cardinal_100_to_999" />
                <tag> out._value = out._value + rules.latest()._value; </tag>
              </item>
              <item>
                <ruleref uri="#Cardinal_10_to_99" />
                <tag> out._value = out._value + '0' + rules.latest()._value; </tag>
              </item>
          </one-of>
          </item>
      </item>
    </one-of>
  </rule>
  <!-- Category: Date -->
  <!-- 
      $Date.IsValidDate: string ["true", "false"]
      $Date.Month:
        $Date.Month._value: integer [1...12]
        $Date.Month._attributes.name: string ["Assumed", "Derived", "Explicit"]
      $Date.Day:
        $Date.Day._value: integer [1...31]
        $Date.Day._attributes.name: string ["Assumed", "Derived", "Explicit"]
      $Date.Year: 
        $Date.Year._value: integer [1900...2099]
        $Date.Year._attributes.name: string ["Assumed", "Derived", "Explicit"]
        $Date.Year._attributes.form: string ["ShortForm", "LongForm", "Relative"] Only specified if _name == "Explicit" or "Derived"

      $Date.AlternateMonth (Optional):
        $Date.AlternateMonth._value: integer [1...12]
      $Date.AlternateDay (Optional):
        $Date.AlternateDay._value: integer [1...31]
      $Date.AlternateYear (Optional):
        $Date.AlternateYear._value: integer [1900...2099]
      -->
  <rule id="Date" scope="public">
    <example> cinco de septiembre de dos mil tres </example>
    <example> lunes </example>
    <example> el nueve </example>
    <one-of>
      <item>
        <ruleref uri="#Date_Day" />
      </item>
      <item>
        <ruleref uri="#Date_Day_Month" />
      </item>
      <item>
        <ruleref uri="#Date_Day_Month_Year" />
      </item>
      <item>
        <ruleref uri="#Date_Month_Day" />
      </item>
      <item>
        <ruleref uri="#Date_Month_Day_Year" />
      </item>
      <item>
        <ruleref uri="#Date_MonthNum_DayNum" />
      </item>
      <item>
        <ruleref uri="#Date_MonthNum_DayNum_Year" />
      </item>
      <item>
        <ruleref uri="#Date_Relative" />
      </item>
    </one-of>
    <tag> out = rules.latest(); </tag>
  </rule>
  <!-- 
      $Date_Day.IsValidDate: string ["true", "false"]
      $Date_Day.Month:
        $Date_Day.Month._value: integer [1...12]
        $Date_Day.Month._attributes.name: string ["Assumed"]
      $Date_Day.Day:
        $Date_Day.Day._value: integer [1...31]
        $Date_Day.Day._attributes.name: string ["Explicit"]
      $Date_Day.Year: 
        $Date_Day.Year._value: integer [1900...2099]
        $Date_Day.Year._attributes.name: string ["Assumed"]

      $Date_Day.AlternateMonth:
        $Date_Day.AlternateMonth._value: integer [1...12]
      $Date_Day.AlternateYear:
        $Date_Day.AlternateYear._value: integer [1900...2099]
      -->
  <rule id="Date_Day" scope="public">
    <example> el diez </example>
    <tag> out.Day = new Object(); out.Month = new Object(); out.Year = new Object(); out.AlternateMonth = new Object(); out.AlternateYear = new Object(); </tag>
    <item repeat="0-1"> el </item>
    <ruleref uri="#Date_DayNum31" />
    <tag>
            out.Day._value = rules.latest()._value;
            out.Day._attributes.name = "Explicit";
            out.Month._value = FutureMonth(out.Day._value);
            out.Month._attributes.name = "Assumed";
            out.Year._value = FutureYear(out.Month._value, out.Day._value);
            out.Year._attributes.name = "Assumed";
            out.AlternateMonth._value = PastMonth(out.Day._value);
            out.AlternateYear._value = PastYear(out.AlternateMonth._value, out.Day._value);
            out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value);
        </tag>
  </rule>
  <!-- 
      $Date_Month_Day.IsValidDate: string ["true", "false"]
      $Date_Month_Day.Month:
        $Date_Month_Day.Month._value: integer [1...12]
        $Date_Month_Day.Month._attributes.name: string ["Explicit"]
      $Date_Month_Day.Day:
        $Date_Month_Day.Day._value: integer [1...31]
        $Date_Month_Day.Day._attributes.name: string ["Explicit"]
      $Date_Month_Day.Year: 
        $Date_Month_Day.$Year._value: integer [1900...2099]
        $Date_Month_Day.$Year._attributes.name: string ["Assumed"]

      $Date_Month_Day.AlternateYear:
        $Date_Month_Day.AlternateYear._value: integer [1900...2099]
      -->
  <rule id="Date_Month_Day" scope="public">
    <example> mayo treinta y uno </example>
    <example> lunes Marzo dos </example>
    <tag> out.Day = new Object(); out.Month = new Object(); out.Year = new Object(); out.AlternateYear = new Object(); </tag>
    <item repeat="0-1">
      <ruleref uri="#Date_Weekday" />
    </item>
    <one-of>
      <item>
        <ruleref uri="#Date_Month31" />
        <tag> out.Month._value = rules.latest()._value; </tag>
        <ruleref uri="#Date_DayNum31" />
        <tag> out.Day._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Date_Month30" />
        <tag> out.Month._value = rules.latest()._value; </tag>
        <ruleref uri="#Date_DayNum30" />
        <tag> out.Day._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Date_Month29" />
        <tag> out.Month._value = rules.latest()._value; </tag>
        <ruleref uri="#Date_DayNum29" />
        <tag> out.Day._value = rules.latest()._value; </tag>
      </item>
    </one-of>
    <tag>
            out.Day._attributes.name = "Explicit";
            out.Month._attributes.name = "Explicit";
            out.Year._value = FutureYear(out.Month._value, out.Day._value);
            out.Year._attributes.name = "Assumed";
            out.AlternateYear._value = PastYear(out.Month._value, out.Day._value);
            out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value);
        </tag>
  </rule>
  <!-- 
      $Date_Month_Day_Year.IsValidDate: string ["true", "false"]
      $Date_Month_Day_Year.Month:
        $Date_Month_Day_Year.Month._value: integer [1...12]
        $Date_Month_Day_Year.Month._attributes.name: string ["Explicit"]
      $Date_Month_Day_Year.Day:
        $Date_Month_Day_Year.Day._value: integer [1...31]
        $Date_Month_Day_Year.Day._attributes.name: string ["Explicit"]
      $Date_Month_Day_Year.Year: 
        $Date_Month_Day_Year.Year._value: integer [1900...2099]
        $Date_Month_Day_Year.Year._attributes.name: string ["Assumed"]
        $Date_Month_Day_Year.Year._attributes.form: string ["ShortForm", "LongForm", "Relative"]
      -->
  <rule id="Date_Month_Day_Year" scope="public">
    <example> junio treinta este año </example>
    <tag> out.Day = new Object(); out.Month = new Object(); out.Year = new Object(); </tag>
    <ruleref uri="#Date_Month_Day" />
    <tag> out.Month = rules.latest().Month; out.Day = rules.latest().Day; </tag>
    <item repeat="0-1">
      <one-of>
        <item> de </item>
        <item> del </item>
      </one-of>
    </item>
    <ruleref uri="#Date_Year" />
    <tag>
            out.Year = rules.latest();
            out.Year._attributes.name = "Explicit";
            out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value);
        </tag>
  </rule>
  <!-- 
      $Date_Day_Month.IsValidDate: string ["true", "false"]
      $Date_Day_Month.Month:
        $Date_Day_Month.Month._value: integer [1...12]
        $Date_Day_Month.Month._attributes.name: string ["Explicit"]
      $Date_Day_Month.Day:
        $Date_Day_Month.Day._value: integer [1...31]
        $Date_Day_Month.Day._attributes.name: string ["Explicit"]
      $Date_Day_Month.Year: 
        $Date_Day_Month.Year._value: integer [1900...2099]
        $Date_Day_Month.Year._attributes.name: string ["Assumed"]

      $Date_Day_Month.AlternateYear:
        $Date_Day_Month.AlternateYear._value: integer [1900...2099]
      -->
  <rule id="Date_Day_Month" scope="public">
    <example> el treinta de Junio </example>
    <example> veinte de Febrero </example>
    <tag> out.Day = new Object(); out.Month = new Object(); out.Year = new Object(); out.AlternateYear = new Object(); </tag>
    <item repeat="0-1"> el </item>
    <item repeat="0-1">
      <ruleref uri="#Date_Weekday" />
    </item>
    <one-of>
      <item>
        <ruleref uri="#Date_DayNum31" />
        <tag> out.Month._value = rules.latest()._value; </tag>
        <item> de </item>
        <ruleref uri="#Date_Month31" />
        <tag> out.Day._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Date_DayNum30" />
        <tag> out.Month._value = rules.latest()._value; </tag>
        <item> de </item>
        <ruleref uri="#Date_Month30" />
        <tag> out.Day._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Date_DayNum29" />
        <tag> out.Month._value = rules.latest()._value; </tag>
        <item> de </item>
        <ruleref uri="#Date_Month29" />
        <tag> out.Day._value = rules.latest()._value; </tag>
      </item>
    </one-of>
    <tag>
            out.Day._attributes.name = "Explicit";
            out.Month._attributes.name = "Explicit";
            out.Year._value = FutureYear(out.Month._value, out.Day._value);
            out.Year._attributes.name = "Assumed";
            out.AlternateYear._value = PastYear(out.Month._value, out.Day._value);
            out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value);
        </tag>
  </rule>
  <!-- 
      $Date_Day_Month_Year.IsValidDate: string ["true", "false"]
      $Date_Day_Month_Year.Month:
        $Date_Day_Month_Year.Month._value: integer [1...12]
        $Date_Day_Month_Year.Month._attributes.name: string ["Explicit"]
      $Date_Day_Month_Year.Day:
        $Date_Day_Month_Year.Day._value: integer [1...31]
        $Date_Day_Month_Year.Day._attributes.name: string ["Explicit"]
      $Date_Day_Month_Year.Year: 
        $Date_Day_Month_Year.Year._value: integer [1900...2099]
        $Date_Day_Month_Year.Year._attributes.name: string ["Derived", "Explicit"]
        $Date_Day_Month_Year.Year._attributes.form: string ["ShortForm", "LongForm", "Relative"]

      -->
  <rule id="Date_Day_Month_Year" scope="public">
    <example> diez de Junio mil novecientos ochenta y dos </example>
    <tag> out.Day = new Object(); out.Month = new Object(); out.Year = new Object(); </tag>
    <ruleref uri="#Date_Day_Month" />
    <tag> out.Month = rules.latest().Month; out.Day = rules.latest().Day; </tag>
    <item repeat="0-1">
      <one-of>
        <item> de </item>
        <item> del </item>
      </one-of>
    </item>
    <ruleref uri="#Date_Year" />
    <tag>
            out.Year = rules.latest();
            out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value);
        </tag>
  </rule>
  <!-- 
      $Date_MonthNum_DayNum.IsValidDate: string ["true", "false"]
      $Date_MonthNum_DayNum.Month:
        $Date_MonthNum_DayNum.Month._value: integer [1...12]
        $Date_MonthNum_DayNum.Month._attributes.name: string ["Explicit"]
      $Date_MonthNum_DayNum.Day:
        $Date_MonthNum_DayNum.Day._value: integer [1...31]
        $Date_MonthNum_DayNum.Day._attributes.name: string ["Explicit"]
      $Date_MonthNum_DayNum.Year: 
        $Date_MonthNum_DayNum.Year._value: integer [1900...2099]
        $Date_MonthNum_DayNum.Year._attributes.name: string ["Assumed"]

      $Date_MonthNum_DayNum.AlternateYear:
        $Date_MonthNum_DayNum.AlternateYear._value: integer [1900...2099]
      -->
  <rule id="Date_MonthNum_DayNum" scope="public">
    <example> dos veintidós </example>
    <example> siete treinta y uno </example>
    <tag> out.Day = new Object(); out.Month = new Object(); out.Year = new Object(); out.AlternateYear = new Object(); </tag>
    <one-of>
      <item>
        <ruleref uri="#Date_MonthNum31" />
        <tag> out.Month._value = rules.latest()._value; </tag>
        <ruleref uri="#Date_DayNum31" />
        <tag> out.Day._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Date_MonthNum30" />
        <tag> out.Month._value = rules.latest()._value; </tag>
        <ruleref uri="#Date_DayNum30" />
        <tag> out.Day._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Date_MonthNum29" />
        <tag> out.Month._value = rules.latest()._value; </tag>
        <ruleref uri="#Date_DayNum29" />
        <tag> out.Day._value = rules.latest()._value; </tag>
      </item>
    </one-of>
    <tag>
            out.Day._attributes.name = "Explicit";
            out.Month._attributes.name = "Explicit";
            out.Year._value = FutureYear(out.Month._value, out.Day._value);
            out.Year._attributes.name = "Assumed";
            out.AlternateYear._value = PastYear(out.Month._value, out.Day._value);
            out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value);
        </tag>
  </rule>
  <!-- 
      $Date_MonthNum_DayNum_Year.IsValidDate: string ["true", "false"]
      $Date_MonthNum_DayNum_Year.Month:
        $Date_MonthNum_DayNum_Year.Month._value: integer [1...12]
        $Date_MonthNum_DayNum_Year.Month._attributes.name: string ["Explicit"]
      $Date_MonthNum_DayNum_Year.Day:
        $Date_MonthNum_DayNum_Year.Day._value: integer [1...31]
        $Date_MonthNum_DayNum_Year.Day._attributes.name: string ["Explicit"]
      $Date_MonthNum_DayNum_Year.Year: 
        $Date_MonthNum_DayNum_Year.Year._value: integer [1900...2099]
        $Date_MonthNum_DayNum_Year.Year._attributes.name: string ["Assumed"]
    -->
  <rule id="Date_MonthNum_DayNum_Year" scope="public">
    <example> siete treinta y uno mil novecientos </example>
    <tag> out.Day = new Object(); out.Month = new Object(); out.Year = new Object(); </tag>
    <ruleref uri="#Date_MonthNum_DayNum" />
    <tag> out.Month = rules.latest().Month; out.Day = rules.latest().Day; </tag>
    <ruleref uri="#Date_Year" />
    <tag> out.Year = rules.latest(); </tag>
    <tag> out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value); </tag>
  </rule>
  <!-- 
    $Date_Relative.Day.IsValidDate: string ["true", "false"]
    $Date_Relative.Month:
    $Date_Relative.Month._value: integer [1...12]
    $Date_Relative.Month._attributes.name: string ["Assumed", "Derived"]
    $Date_Relative.Day:
    $Date_Relative.Day._value: integer [1...31]
    $Date_Relative.Day._attributes.name: string ["Assumed", "Derived"]
    $Date_Relative.Year:
    $Date_Relative.Year._value: integer [1900...2099]
    $Date_Relative.Year._attributes.name: string ["Derived"]

    $Date_Relative.AlternateMonth (Optional):
    $Date_Relative.AlternateMonth._value: integer [1...12]
    $Date_Relative.AlternateDay (Optional):
    $Date_Relative.AlternateDay._value: integer [1...31]
    $Date_Relative.AlternateYear (Optional):
    $Date_Relative.AlternateYear._value: integer [1900...2099]
    -->
  <rule id="Date_Relative" scope="public">
    <example> hoy </example>
    <example> mañana </example>
    <example> ayer </example>
    <tag> out.Day = new Object(); out.Month = new Object(); out.Year = new Object(); </tag>
    <tag> var oDate; out.Day._attributes.name = "Derived"; out.Month._attributes.name = "Derived"; out.Year._attributes.name = "Derived"; </tag>
    <one-of>
      <item>
                hoy <tag> oDate = GetDateFromOffset(0); </tag></item>
      <item>
                mañana <tag> oDate = GetDateFromOffset(1); </tag></item>
      <item>
                ayer <tag> oDate = GetDateFromOffset(-1); </tag></item>
      <item>
        <ruleref uri="#Date_Weekday" />
        <tag>
                    var weekdayOffset = GetOffsetFromWeekday(rules.latest()._value, "next");
                    oDate = GetDateFromOffset(weekdayOffset);

                    var altWeekdayOffset = GetOffsetFromWeekday(rules.latest()._value, "previous");
                    var altDate = GetDateFromOffset(altWeekdayOffset);
                    out.AlternateMonth = new Object(); out.AlternateYear = new Object(); out.AlternateDay = new Object();
                    out.AlternateYear._value = altDate.getFullYear();
                    out.AlternateMonth._value = altDate.getMonth() + 1;
                    out.AlternateDay._value = altDate.getDate();
                </tag>
      </item>
      <item>
        <item repeat="0-1"> el </item>
        <item> próximo </item>
        <ruleref uri="#Date_Weekday" />
        <tag>
                    var weekdayOffset = GetOffsetFromWeekday(rules.latest()._value, "next");
                    oDate = GetDateFromOffset(weekdayOffset);

                    var altWeekdayOffset = weekdayOffset + 7;
                    var altDate = GetDateFromOffset(altWeekdayOffset);
                    out.AlternateMonth = new Object(); out.AlternateYear = new Object(); out.AlternateDay = new Object();
                    out.AlternateYear._value = altDate.getFullYear();
                    out.AlternateMonth._value = altDate.getMonth() + 1;
                    out.AlternateDay._value = altDate.getDate();
                </tag>
      </item>
      <item>
        <item repeat="0-1"> el </item>
        <ruleref uri="#Date_Weekday" />
        <tag>
                    var weekdayOffset = GetOffsetFromWeekday(rules.latest()._value, "previous");
                    oDate = GetDateFromOffset(weekdayOffset);

                    var altWeekdayOffset = weekdayOffset - 7;
                    var altDate = GetDateFromOffset(altWeekdayOffset);
                    out.AlternateMonth = new Object(); out.AlternateYear = new Object(); out.AlternateDay = new Object();
                    out.AlternateYear._value = altDate.getFullYear();
                    out.AlternateMonth._value = altDate.getMonth() + 1;
                    out.AlternateDay._value = altDate.getDate();
                </tag>
        <item> pasado </item>
      </item>
    </one-of>
    <tag>
            out.Year._value = oDate.getFullYear();
            out.Month._value = oDate.getMonth() + 1;
            out.Day._value = oDate.getDate();
            out.IsValidDate = IsValidDate(out.Month._value, out.Day._value, out.Year._value);
        </tag>
  </rule>
  <!-- 
      $Date_MonthNum_Year.IsValidDate: string ["true", "false"]
      $Date_MonthNum_Year.Month:
        $Date_MonthNum_Year.Month._value: integer [1...12]
        $Date_MonthNum_Year.Month._attributes.name: string ["Explicit"]
      $Date_MonthNum_Year.Year: 
        $Date_MonthNum_Year.Year._value: integer [1900...2099]
        $Date_MonthNum_Year.Year._attributes.name: string ["Derived", "Explicit"]
        $Date_MonthNum_Year.Year._attributes.form: string ["ShortForm", "LongForm", "Relative"]
  -->
  <rule id="Date_MonthNum_Year" scope="public">
    <example> nueve sesenta y nueve </example>
    <tag> out.Month = new Object(); out.Year = new Object(); </tag>
    <one-of>
      <item>
        <ruleref uri="#Date_MonthNum31" />
        <tag> out.Month._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Date_MonthNum30" />
        <tag> out.Month._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Date_MonthNum29" />
        <tag> out.Month._value = rules.latest()._value; </tag>
      </item>
    </one-of>
    <item repeat="0-1">
      <one-of>
        <item> de </item>
        <item> del </item>
      </one-of>
    </item>
    <ruleref uri="#Date_Year" />
    <tag>
            out.Year = rules.latest();
            out.Month._attributes.name = "Explicit";
        </tag>
  </rule>
  <!-- 
      $Date_Month_Year.IsValidDate: string ["true", "false"]
      $Date_Month_Year.Month:
        $Date_Month_Year.Month._value: integer [1...12]
        $Date_Month_Year.Month._attributes.name: string ["Explicit"]
      $Date_Month_Year.Year: 
        $Date_Month_Year.Year._value: integer [1900...2099]
        $Date_Month_Year.Year._attributes.name: string ["Derived", "Explicit"]
        $Date_Month_Year.Year._attributes.form: string ["ShortForm", "LongForm", "Relative"]
  -->
  <rule id="Date_Month_Year" scope="public">
    <example> abril mil novecientos </example>
    <tag> out.Month = new Object(); out.Year = new Object(); </tag>
    <one-of>
      <item>
        <ruleref uri="#Date_Month31" />
        <tag> out.Month._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Date_Month30" />
        <tag> out.Month._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Date_Month29" />
        <tag> out.Month._value = rules.latest()._value; </tag>
      </item>
    </one-of>
    <item repeat="0-1">
      <one-of>
        <item> de </item>
        <item> del </item>
      </one-of>
    </item>
    <ruleref uri="#Date_Year" />
    <tag>
            out.Year = rules.latest();
            out.Month._attributes.name = "Explicit";
        </tag>
  </rule>
  <!-- 
    $Date_Weekday._value : integer [1...7] Sunday=1, Monday=2, ..., Saturday=7
    -->
  <rule id="Date_Weekday" scope="public">
    <example> domingo </example>
    <example> viernes </example>
    <one-of>
      <item>
                domingo <tag> out._value = 1; </tag></item>
      <item>
                lunes <tag> out._value = 2; </tag></item>
      <item>
                martes <tag> out._value = 3; </tag></item>
      <item>
                miércoles  <tag> out._value = 4; </tag></item>
      <item>
                jueves <tag> out._value = 5; </tag></item>
      <item>
                viernes <tag> out._value = 6; </tag></item>
      <item>
                sábado <tag> out._value = 7; </tag></item>
    </one-of>
  </rule>
  <!-- $Date_Month31._value : integer [1, 3, 5, 7, 8, 10, 12] -->
  <rule id="Date_Month31" scope="public">
    <example> enero </example>
    <example> marzo </example>
    <example> mayo </example>
    <one-of>
      <item>
                enero <tag> out._value = 1; </tag></item>
      <item>
                marzo <tag> out._value = 3; </tag></item>
      <item>
                mayo <tag> out._value = 5; </tag></item>
      <item>
                julio <tag> out._value = 7; </tag></item>
      <item>
                agosto <tag> out._value = 8; </tag></item>
      <item>
                octubre <tag> out._value = 10; </tag></item>
      <item>
                diciembre <tag> out._value = 12; </tag></item>
    </one-of>
  </rule>
  <!-- $Date_Month30._value : integer [4, 6, 9, 11] -->
  <rule id="Date_Month30" scope="public">
    <example> abril </example>
    <example> junio </example>
    <example> septiembre </example>
    <one-of>
      <item>
                abril <tag> out._value = 4; </tag></item>
      <item>
                junio <tag> out._value = 6; </tag></item>
      <item>
                septiembre <tag> out._value = 9; </tag></item>
      <item>
                noviembre <tag> out._value = 11; </tag></item>
    </one-of>
  </rule>
  <!-- $Date_Month29._value : integer [2] -->
  <rule id="Date_Month29" scope="public">
    <example> Febrero </example>
    <one-of>
      <item>
                febrero <tag> out._value = 2; </tag></item>
    </one-of>
  </rule>
  <!-- $Date_MonthNum31._value : integer [1, 3, 5, 7, 8, 10, 12]-->
  <rule id="Date_MonthNum31" scope="public">
    <example> cero uno </example>
    <example> siete </example>
    <one-of>
      <item>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_0" />
        </item>
                uno <tag> out._value = 1; </tag></item>
      <item>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_0" />
        </item>
                tres <tag> out._value = 3; </tag></item>
      <item>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_0" />
        </item>
                cinco <tag> out._value = 5; </tag></item>
      <item>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_0" />
        </item>
                siete <tag> out._value = 7; </tag></item>
      <item>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_0" />
        </item>
                ocho <tag> out._value = 8; </tag></item>
      <item>
                diez <tag> out._value = 10; </tag></item>
      <item>
                doce <tag> out._value = 12; </tag></item>
    </one-of>
  </rule>
  <!-- $Date_MonthNum30._value : integer [4, 6, 9, 11]-->
  <rule id="Date_MonthNum30" scope="public">
    <example> cero seis </example>
    <example> once </example>
    <one-of>
      <item>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_0" />
        </item>
                cuatro <tag> out._value = 4; </tag></item>
      <item>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_0" />
        </item>
                seis <tag> out._value = 6; </tag></item>
      <item>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_0" />
        </item>
                nueve <tag> out._value = 9; </tag></item>
      <item>
                once <tag> out._value = 11; </tag></item>
    </one-of>
  </rule>
  <!-- $Date_MonthNum29._value : integer [2]-->
  <rule id="Date_MonthNum29" scope="public">
    <example>dos </example>
    <item repeat="0-1">
      <ruleref uri="#Cardinal_0" />
    </item>
        dos <tag> out._value = 2; </tag></rule>
  <!-- $Date_DayNum29._value : integer [1...29] -->
  <rule id="Date_DayNum29" scope="public">
    <example> cero uno </example>
    <example> once </example>
    <example> veintiocho </example>
    <one-of>
      <item>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_0" />
        </item>
        <ruleref uri="#Cardinal_1_to_9" />
        <tag> out._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_10_to_19" />
        <tag> out._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_20_to_29" />
        <tag> out._value = rules.latest()._value </tag>
      </item>
    </one-of>
  </rule>
  <!-- $Date_DayNum30._value : integer [1...30] -->
  <rule id="Date_DayNum30" scope="public">
    <example> treinta </example>
    <one-of>
      <item>
        <ruleref uri="#Date_DayNum29" />
        <tag> out._value = rules.latest()._value; </tag>
      </item>
      <item>
                treinta <tag> out._value = 30; </tag></item>
    </one-of>
  </rule>
  <!-- $Date_DayNum31._value : integer [1...31] -->
  <rule id="Date_DayNum31" scope="public">
    <example> treinta y uno </example>
    <one-of>
      <item>
        <ruleref uri="#Date_DayNum30" />
        <tag> out._value = rules.latest()._value; </tag>
      </item>
      <item>
                treinta y uno <tag> out._value = 31; </tag></item>
    </one-of>
  </rule>
  <!-- 
  Date_Year: Supports years between 1900 and 2099. If the caller just specifies the last two digits
  then the behavior is as follows: 30 < NN: 20NN; 30 >= NN: 19NN
  
  $Date_Year._value: integer [1900...2099]
  $Date_Year._attributes.name: string ["Derived", "Explicit"]
  $Date_Year._attributes.form: string ["Long Form", "Short Form", "Relative"]
 -->
  <rule id="Date_Year" scope="public">
    <example> mil novecientos </example>
    <example> año pasado </example>
    <tag>
      var offset = 0;
      out._value = (new Date()).getFullYear();
    </tag>
    <one-of>
      <item>
                mil novecientos
                <tag> out._value = 1900; </tag><item repeat="0-1"><ruleref uri="#Cardinal_1_to_99" /><tag> out._value = out._value + rules.latest()._value; </tag></item>
        <tag> out._attributes.name = "Explicit"; out._attributes.form = "Long Form"; </tag>
      </item>
      <item>
                dos mil
                <tag> out._value = 2000; </tag><item repeat="0-1"><ruleref uri="#Cardinal_1_to_99" /><tag> out._value = out._value + rules.latest()._value; </tag></item>
        <tag> out._attributes.name = "Explicit"; out._attributes.form = "Long Form"; </tag>
      </item>
      <item>
        <one-of>
          <item>
            <item repeat="0-1">
              <ruleref uri="#Cardinal_0" />
            </item>
            <ruleref uri="#Cardinal_0_to_9" />
          </item>
          <item>
            <ruleref uri="#Cardinal_10_to_99" />
          </item>
        </one-of>
        <tag>
                  offset = rules.latest()._value;
                    if (offset >= 30) {
                        offset = offset + 1900;
                    }
                    else {
                        offset = offset + 2000;
                    }
            out._value = offset;
            out._attributes.name = "Derived"; out._attributes.form = "Short Form";
        </tag>
      </item>
      <item>
                este año <tag> out._attributes.name = "Derived"; out._attributes.form = "Relative"; </tag></item>
      <item>
        <item repeat="0-1">el</item> próximo año <tag> out._value = out._value + 1; out._attributes.name = "Derived"; out._attributes.form = "Relative"; </tag></item>
      <item>
        <item repeat="0-1">el</item> año pasado <tag> out._value = out._value - 1; out._attributes.name = "Derived"; out._attributes.form = "Relative"; </tag></item>
    </one-of>
  </rule>
  <!--
    Category: Time
    Description: The Time rule provides for input of clock time quantities. 
    -->
  <!--
  $Time.Hour:
    $Time.Hour._value: integer [0...23]
    $Time.Hour._attributes.name: string ["Assumed", "Explicit"]
  $Time.Minute:
    $Time.Minute: integer [0...59]
  $Time.AlternateHour._value: integer [0...23]
  -->
  <rule id="Time" scope="public">
    <example> doce a. m. </example>
    <example> siete en punto </example>
    <tag> out.Hour = new Object(); out.Minute = new Object(); </tag>
    <one-of>
      <item>
        <ruleref uri="#Time_Hour" />
        <tag> out = rules.latest(); out.Minute = new Object(); out.Minute._value = 0; </tag>
      </item>
      <item>
        <ruleref uri="#Time_BeforeAfter" />
        <tag> var offset = rules.latest()._value; </tag>
        <ruleref uri="#Time_Hour" />
        <tag>
                    out = rules.latest();
                    out.Minute = new Object();
                    out.Hour._value = NormalizeHour(out.Hour._value, offset);
                    out.Minute._value = NormalizeMinute(offset);
                    if (typeof(out.AlternateHour) != "undefined") {
                    out.AlternateHour._value = NormalizeHour(out.AlternateHour._value, offset);
                    }
                </tag>
      </item>
      <item>
        <ruleref uri="#Time_HourNum" />
        <tag>
                    out.Hour._value = Hour24(rules.latest()._value, "");
                    out.Hour._attributes.name = "Assumed";
                    out.AlternateHour = new Object();
                    out.AlternateHour._value = AlternateHour24(rules.latest()._value);
                </tag>
        <item repeat="0-1"> y </item>
        <ruleref uri="#Time_Minute" />
        <tag> out.Minute._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Time_HourNum" />
        <tag> out.Hour._value = rules.latest()._value; out.Hour._attributes.name = "Explicit"; </tag>
        <item repeat="0-1"> y </item>
        <ruleref uri="#Time_Minute" />
        <tag> out.Minute._value = rules.latest()._value; </tag>
        <ruleref uri="#Time_AmPm" />
        <tag> out.Hour._value = Hour24(out.Hour._value, rules.latest()._value); </tag>
      </item>
      <item>
        <ruleref uri="#Time_HourNum" />
        <tag> out.Hour._value = rules.latest()._value; </tag>
        <item repeat="0-1"> y </item>
        <ruleref uri="#Time_Minute" />
        <tag> out.Minute._value = rules.latest()._value; </tag>
        <one-of>
          <item>
                        minutos
                        <tag>
                            out.Hour._attributes.name = "Assumed";
                            out.AlternateHour = new Object();
                            out.AlternateHour._value = AlternateHour24(out.Hour._value);
                        </tag></item>
          <item>
                        minutos
                        <ruleref uri="#Time_AmPm" /><tag>
                            out.Hour._attributes.name = "Explicit";
                            out.Hour._value = Hour24(out.Hour._value, rules.latest()._value);
                        </tag></item>
        </one-of>
      </item>
      <item>
        <tag> var offset = 0; out.Hour._attributes.name = "Explicit"; out.Minute._value = 0; </tag>
        <item repeat="0-1">
          <ruleref uri="#Time_BeforeAfter" />
          <tag> offset = rules.latest()._value; </tag>
        </item>
        <one-of>
          <item>
            <item repeat="0-1"> del </item> mediodía <tag> out.Hour._value = 12; </tag></item>
          <item>
            <item repeat="0-1"> de la </item> medianoche <tag> out.Hour._value = 0; </tag></item>
        </one-of>
        <tag> out.Hour._value = NormalizeHour(out.Hour._value, offset); out.Minute._value = NormalizeMinute(offset); </tag>
      </item>
    </one-of>
  </rule>
  <!--
  $Time_Hour:
    $Time_Hour.Hour:
      $Time_Hour.Hour._value: integer [0...23]
      $Time_Hour.Hour._attributes.name: string ["Assumed", "Explicit"]
    $Time_Hour.AlternateHour._value: integer [0...23] optional
  -->
  <rule id="Time_Hour" scope="public">
    <example> doce en punto </example>
    <example> once </example>
    <tag> out.Hour = new Object(); </tag>
    <one-of>
      <item>
        <ruleref uri="#Time_HourNum" />
        <item repeat="0-1"> en punto </item>
        <tag>
                    out.Hour._value = rules.latest()._value;
                    out.AlternateHour = new Object();
                    out.AlternateHour._value = AlternateHour24(out.Hour._value);
                    out.Hour._value = Hour24(out.Hour._value, "");
                    out.Hour._attributes.name = "Assumed";
                </tag>
      </item>
      <item>
        <ruleref uri="#Time_HourNum" />
        <tag>
                out.Hour._value = rules.latest()._value;
              </tag>
        <item repeat="0-1"> en punto </item>
        <ruleref uri="#Time_AmPm" />
        <tag> out.Hour._value = Hour24(out.Hour._value, rules.latest()._value); out.Hour._attributes.name = "Explicit"; </tag>
      </item>
    </one-of>
  </rule>
  <!--
  $Time_HourNum:
    $Time_HourNum._value: integer [1...12]
  -->
  <rule id="Time_HourNum" scope="public">
    <example> diez </example>
    <example> once </example>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_1_to_9" />
        <tag> out._value = rules.latest()._value; </tag>
      </item>
      <item>
                diez <tag> out._value = 10; </tag></item>
      <item>
                once <tag> out._value = 11; </tag></item>
      <item>
                doce <tag> out._value = 12; </tag></item>
    </one-of>
  </rule>
  <!--
  $Time_BeforeAfter:
    $Time_BeforeAfter._value: integer [-59...59]
  -->
  <rule id="Time_BeforeAfter" scope="public">
    <example> un cuarto pasada </example>
    <example> un cuarto hasta </example>
    <example> media </example>
    <one-of>
      <item>
                un cuarto <tag> out._value = 15; </tag><one-of><item><one-of><item> pasada </item><item> para </item></one-of><tag> out._value = 0 + out._value; </tag></item><item><one-of><item> de </item><item> para </item><item> hasta </item><item> antes </item></one-of><tag> out._value = 0 - out._value; </tag></item></one-of></item>
      <item>
                media <tag> out._value = 30; </tag></item>
      <item>
        <ruleref uri="#Time_Minute" />
        <tag> out._value = rules.latest()._value; </tag>
        <item repeat="0-1">
          <one-of>
            <item> minuto </item>
            <item> minutos </item>
          </one-of>
        </item>
        <one-of>
          <item>
            <one-of>
              <item> pasada </item>
              <item> después </item>
            </one-of>
            <tag> out._value = 0 + out._value; </tag>
          </item>
          <item>
            <one-of>
              <item> de </item>
              <item> para </item>
              <item> hasta </item>
              <item> antes </item>
            </one-of>
            <tag> out._value = 0 - out._value; </tag>
          </item>
        </one-of>
      </item>
    </one-of>
  </rule>
  <!--
    $Time_Minute:
        $Time_Minute._value: integer [1...59]
    -->
  <rule id="Time_Minute" scope="public">
    <example> veinte </example>
    <example> cuarenta y uno </example>
    <one-of>
      <item>
        <item repeat="0-1">
          <ruleref uri="#Cardinal_0" />
        </item>
        <ruleref uri="#Cardinal_1_to_9" />
        <tag> out._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_10_to_19" />
        <tag> out._value = rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_20_to_29" />
        <tag> out._value = rules.latest()._value; </tag>
      </item>
      <item>
        <one-of>
          <item>
                        treinta  <tag> out._value = 30; </tag></item>
          <item>
                        cuarenta <tag> out._value = 40; </tag></item>
          <item>
                        cincuenta <tag> out._value = 50; </tag></item>
        </one-of>
        <item repeat="0-1">
                    y
                    <ruleref uri="#Cardinal_1_to_9" /><tag> out._value = out._value + rules.latest()._value; </tag></item>
      </item>
    </one-of>
  </rule>
  <!--
  $Time_AmPm:
    $Time_AmPm._value: string ["AM", "PM"]
  -->
  <rule id="Time_AmPm" scope="public">
    <example> a. m. </example>
    <example> p. m. </example>
    <example> de la mañana </example>
    <example> de la tarde  </example>
    <one-of>
      <item>
        <one-of>
          <item> a. m. </item>
          <item> de la medianoche </item>
          <item> de la madrugada </item>
          <item> de la mañana </item>
        </one-of>
        <tag> out._value = "AM"; </tag>
      </item>
      <item>
        <one-of>
          <item> p. m. </item>
          <item> del mediodía </item>
          <item> de la tarde </item>
          <item> de la noche </item>
        </one-of>
        <tag> out._value = "PM"; </tag>
      </item>
    </one-of>
  </rule>
  <!-- Category: Currency_US -->
  <!-- Currency_US._value: float [0.00 ... 1000000.99] -->
  <rule id="Currency_US" scope="public">
    <example> quince centavos </example>
    <tag> out._value = 0.00; </tag>
    <one-of>
      <item>
        <ruleref uri="#Cardinal" />
        <tag>out._value = rules.latest()._value;</tag>
        <one-of>
          <item> dólar </item>
          <item> dólares </item>
        </one-of>
        <item repeat="0-1">
          <item repeat="0-1">
            <one-of>
              <item> y </item>
              <item> con </item>
            </one-of>
          </item>
          <ruleref uri="#Cardinal_1_to_99" />
          <tag> out._value = out._value + rules.latest()._value * 0.01; </tag>
          <one-of>
            <item> centavo </item>
            <item> centavos </item>
          </one-of>
        </item>
      </item>
      <item>
        <ruleref uri="#Cardinal" />
        <tag>out._value = rules.latest()._value;</tag>
        <ruleref uri="#Cardinal_1_to_99" />
        <tag> out._value = out._value + rules.latest()._value * 0.01; </tag>
      </item>
      <item>
        <one-of>
          <item>
            <ruleref uri="#Cardinal_1_to_99" />
            <tag> out._value = rules.latest()._value * 100;</tag>
          </item>
          <item>
            <ruleref uri="#Cardinal_1_to_9" />
            <tag> out._value = rules.latest()._value * 100;</tag>
          </item>
        </one-of>
        <one-of>
          <item>
            <ruleref uri="#Cardinal_1_to_99" />
            <tag> out._value = out._value + rules.latest()._value; </tag>
          </item>
          <item>
            <ruleref uri="#Cardinal_0" />
            <ruleref uri="#Cardinal_1_to_9" />
            <tag> out._value = out._value + rules.latest()._value; </tag>
          </item>
        </one-of>
        <tag> out._value = out._value; out._alternateValue = out._value * 0.01; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_1_to_99" />
        <tag> out._value = out._value + rules.latest()._value*1000; </tag>
        <ruleref uri="#Cardinal_1_to_9" />
        <tag> out._value = out._value + rules.latest()._value*100; </tag>
        <ruleref uri="#Cardinal_1_to_99" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_1_to_9" />
        <tag> out._value = out._value + rules.latest()._value*100; </tag>
        <ruleref uri="#Cardinal_1_to_99" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#Cardinal_1_to_99" />
        <tag> out._value = out._value + rules.latest()._value*0.01; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_1_to_99" />
        <one-of>
          <item> centavo </item>
          <item> centavos </item>
        </one-of>
        <tag> out._value = rules.latest()._value * 0.01; </tag>
      </item>
    </one-of>
  </rule>
  <!--  Currency_US_upto_100._value: float [0.00 ... 100.00] -->
  <rule id="Currency_US_upto_100" scope="public">
    <example> cien dólares </example>
    <example> cero dólares y catorce centavos </example>
    <tag> out._value = 0.00; </tag>
    <one-of>
      <item>
        <one-of>
          <item>
            <ruleref uri="#Cardinal_1_to_99" />
            <tag>out._value = rules.latest()._value;</tag>
            <one-of>
              <item> dólar </item>
              <item> dólares </item>
            </one-of>
          </item>
          <item>
                        cero dólares
                        <tag> out._value = 0.00; </tag></item>
        </one-of>
        <item repeat="0-1">
          <item repeat="0-1">
            <one-of>
              <item> y </item>
              <item> con </item>
            </one-of>
          </item>
          <ruleref uri="#Cardinal_1_to_99" />
          <tag> out._value = out._value + rules.latest()._value * 0.01; </tag>
          <one-of>
            <item> centavo </item>
            <item> centavos </item>
          </one-of>
        </item>
      </item>
      <item>
                cien dólares <tag> out._value = 100.00; </tag></item>
      <item>
        <ruleref uri="#Cardinal_1_to_99" />
        <tag>out._value = rules.latest()._value;</tag>
        <one-of>
          <item>
            <ruleref uri="#Cardinal_1_to_99" />
            <tag> out._value = out._value + rules.latest()._value * 0.01; </tag>
          </item>
          <item>
            <ruleref uri="#Cardinal_0" />
            <ruleref uri="#Cardinal_1_to_9" />
            <tag> out._value = out._value + rules.latest()._value*0.01; </tag>
          </item>
        </one-of>
      </item>
      <item>
        <ruleref uri="#Cardinal_1_to_99" />
        <one-of>
          <item> centavo </item>
          <item> centavos </item>
        </one-of>
        <tag> out._value = rules.latest()._value * 0.01; </tag>
      </item>
    </one-of>
  </rule>
  <!-- Currency_US_upto_1000._value: float [0.00 ... 1000.00] -->
  <rule id="Currency_US_upto_1000" scope="public">
    <example> cien dólares </example>
    <example> cero dólares y catorce centavos </example>
    <tag> out._value = 0.00; </tag>
    <one-of>
      <item>
        <one-of>
          <item>
            <ruleref uri="#Cardinal_1_to_999" />
            <tag>out._value = rules.latest()._value;</tag>
            <one-of>
              <item> dólar </item>
              <item> dólares </item>
            </one-of>
          </item>
          <item>
                        cero dólares
                        <tag> out._value = 0.00; </tag></item>
        </one-of>
        <item repeat="0-1">
          <item repeat="0-1">
            <one-of>
              <item> y </item>
              <item> con </item>
            </one-of>
          </item>
          <ruleref uri="#Cardinal_1_to_99" />
          <tag> out._value = out._value + rules.latest()._value * 0.01; </tag>
          <one-of>
            <item> centavo </item>
            <item> centavos </item>
          </one-of>
        </item>
      </item>
      <item>
                mil dólares <tag> out._value = 1000.00; </tag></item>
      <item>
        <ruleref uri="#Cardinal_1_to_999" />
        <tag>out._value = rules.latest()._value;</tag>
        <ruleref uri="#Cardinal_1_to_99" />
        <tag> out._value = out._value + rules.latest()._value * 0.01; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_1_to_99" />
        <one-of>
          <item> centavo </item>
          <item> centavos </item>
        </one-of>
        <tag> out._value = rules.latest()._value * 0.01; </tag>
      </item>
    </one-of>
  </rule>
  <!-- Currency_US_upto_10000._value: float [0.00 ... 10000.00] -->
  <rule id="Currency_US_upto_10000" scope="public">
    <example> cien dólares </example>
    <example> cero dólares y catorce centavos </example>
    <tag> out._value = 0.00; </tag>
    <one-of>
      <item>
        <one-of>
          <item>
            <ruleref uri="#Cardinal_1_to_9999" />
            <tag>out._value = rules.latest()._value;</tag>
            <one-of>
              <item> dólar </item>
              <item> dólares </item>
            </one-of>
          </item>
          <item>
                        cero dólares
                        <tag> out._value = 0.00; </tag></item>
        </one-of>
        <item repeat="0-1">
          <item repeat="0-1">
            <one-of>
              <item> y </item>
              <item> con </item>
            </one-of>
          </item>
          <ruleref uri="#Cardinal_1_to_99" />
          <tag> out._value = out._value + rules.latest()._value * 0.01; </tag>
          <one-of>
            <item> centavo </item>
            <item> centavos </item>
          </one-of>
        </item>
      </item>
      <item>
                diez mil dólares <tag> out._value = 1000.00; </tag></item>
      <item>
        <ruleref uri="#Cardinal_1_to_9999" />
        <tag>out._value = rules.latest()._value;</tag>
        <ruleref uri="#Cardinal_1_to_99" />
        <tag> out._value = out._value + rules.latest()._value * 0.01; </tag>
      </item>
      <item>
        <ruleref uri="#Cardinal_1_to_99" />
        <one-of>
          <item> centavo </item>
          <item> centavos </item>
        </one-of>
        <tag> out._value = rules.latest()._value * 0.01; </tag>
      </item>
    </one-of>
  </rule>
  <rule id="PhoneNumber_Extension" scope="public">
    <tag> out._value = ''; </tag>
    <one-of>
        <item>
          <ruleref uri="#Cardinal_0_to_9" />
      <tag> out._value = out._value + rules.latest()._value; </tag>
          <ruleref uri="#DigitBlock_2Digits" />
          <tag>
                        out._value = out._value + rules.latest()._value;
          </tag>
        </item>
        <item>
          <ruleref uri="#DigitBlock_2Digits" />
          <tag>
                        out._value = out._value + rules.latest()._value;
          </tag>
          <ruleref uri="#DigitBlock_2Digits" />
          <tag>
                        out._value = out._value + rules.latest()._value;
          </tag>
        </item>
        <item>
          <ruleref uri="#Cardinal_0_to_9" />
      <tag> out._value = out._value + rules.latest()._value; </tag>
          <ruleref uri="#DigitBlock_2Digits" />
          <tag>
                        out._value = out._value + rules.latest()._value;
          </tag>
          <ruleref uri="#DigitBlock_2Digits" />
          <tag>
                        out._value = out._value + rules.latest()._value;
          </tag>
        </item>
    </one-of>
  </rule>
  <!--
    Category: PhoneNumber_US
    Description: The PhoneNumber_US rules are used to parse a US phone number including (optionally) the area code.
    -->
  <!-- 
  PhoneNumber_US._value: string [11,10 or 7 characters]
  PhoneNumber_US.AreaCode._value: string [3 characters]
  PhoneNumber_US.LocalNumber._value: string [7 characters]
  -->
  <rule id="PhoneNumber_US" scope="public">
    <example> ochocientos dos ochenta y cuatro sesenta y cinco treinta y cuatro </example>
    <example> cuatro sesenta uno tres cuatro dos</example>
    <example> tres cuatro dos dos tres ocho nueve </example>
    <example> tres cuatro dos dos tres ocho nueve siete siete uno </example>
    <example> uno ochocientos tres ochenta y siete cincuenta y dos veintiocho </example>
    <example> ochocientos tres ochenta y siete cincuenta y dos veintiocho </example>
    <tag>
            out._value = '';
        </tag>
    <item repeat="0-1">
            uno
            <tag> out._value = out._value + '1'; </tag></item>
    <item repeat="0-1">
      <ruleref uri="#PhoneNumber_US_AreaCode" />
      <tag>
                out.AreaCode = new Object();
                out._value = out._value + rules.latest()._value;
                out.AreaCode._value = rules.latest()._value;
            </tag>
    </item>
    <ruleref uri="#PhoneNumber_US_LocalNumber" />
    <tag>
            out.LocalNumber = new Object();
            out._value = out._value + rules.latest()._value;
            out.LocalNumber._value = rules.latest()._value;
        </tag>
  </rule>
  <!-- 
  PhoneNumber_US_with_Extension._value: string [11,10 or 7 plus 2-5 characters for an optional extension starting with "x"]
  PhoneNumber_US_with_Extension.AreaCode._value: string [3 characters]
  PhoneNumber_US_with_Extension.LocalNumber._value: string [7 characters]
  PhoneNumber_US_with_Extension.Extension._value: string [1-4 characters]
 -->
  <rule id="PhoneNumber_US_with_Extension" scope="public">
    <example> ochocientos dos ochenta y cuatro sesenta y cinco treinta y cuatro extensión dos ochenta y tres</example>
    <example> cuatro sesenta uno tres cuatro dos extensión dos tres ocho</example>
    <example> ochocientos dos ochenta y cuatro sesenta y cinco treinta y cuatro </example>
    <example> cuatro sesenta uno tres cuatro dos</example>
    <example> tres cuatro dos dos tres ocho nueve </example>
    <example> tres cuatro dos dos tres ocho nueve siete siete uno </example>
    <example> uno ochocientos tres ochenta y siete cincuenta y dos veintiocho </example>
    <example> ochocientos tres ochenta y siete cincuenta y dos veintiocho </example>
    <tag>
            out._value = '';
        </tag>
    <item repeat="0-1">
            uno
            <tag> out._value = out._value + '1'; </tag></item>
    <item repeat="0-1">
      <ruleref uri="#PhoneNumber_US_AreaCode" />
      <tag>
                out.AreaCode = new Object();
                out._value = out._value + rules.latest()._value;
                out.AreaCode._value = rules.latest()._value;
            </tag>
    </item>
    <ruleref uri="#PhoneNumber_US_LocalNumber" />
    <tag>
            out.LocalNumber = new Object();
            out._value = out._value + rules.latest()._value;
            out.LocalNumber._value = rules.latest()._value;
        </tag>
    <item repeat="0-1">
        extensión
        <ruleref uri="#PhoneNumber_Extension" />
        <tag>
            out.Extension = new Object();
            out._value = out._value + "x" + rules.latest()._value;
            out.Extension._value = rules.latest()._value;
        </tag>
    </item>
  </rule>
  <!-- PhoneNumber_US_AreaCode._value: string [3 characters] -->
  <rule id="PhoneNumber_US_AreaCode" scope="public">
    <example> seis uno nueve </example>
    <example> tres uno ocho </example>
    <tag> out._value = ''; </tag>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_2_to_9" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#DigitBlock_2Digits" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
      </item>
      <item>
                ochocientos <tag> out._value = '800'; </tag>
      </item>
      <item>
        <ruleref uri="#DigitBlock_3Digits" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
      </item>
    </one-of>
  </rule>
  <!-- PhoneNumber_US_LocalNumber._value: string [7 characters] -->
  <rule id="PhoneNumber_US_LocalNumber" scope="public">
    <example> cinco siete nueve cuatro mil </example>
    <example> cinco uno cinco dieciocho quince </example>
    <tag> out._value = ''; </tag>
    <one-of>
      <item>
        <ruleref uri="#Cardinal_2_to_9" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#DigitBlock_2Digits" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
      </item>
      <item>
        <ruleref uri="#DigitBlock_3Digits" /> 
        <tag> out._value =  out._value + rules.latest()._value; </tag>
      </item>
    </one-of>
    <ruleref uri="#DigitBlock_4Digits" />
    <tag> out._value = out._value + rules.latest()._value; </tag>
  </rule>
  <!--
    Category: PhoneNumber_Mexico
    Description: The PhoneNumber_Mexico rules are used to parse a Mexico phone number including (optionally) the area code.
    -->
  <!-- 
  PhoneNumber_Mexico._value: string
  PhoneNumber_Mexico.AreaCode._value: string [2 or 3 characters]
  PhoneNumber_Mexico.LocalNumber._value: string [7 or 8 characters]
  PhoneNumber_Mexico_with_Extension.Extension._value: string [1-4 characters]
  -->
  <rule id="PhoneNumber_Mexico_with_Extension" scope="public">
    <example> tres tres dos dos dos dos dos dos dos dos </example>
    <item>
        <ruleref uri="#PhoneNumber_Mexico" />
        <tag> out = rules.latest(); </tag>
    </item>
    <item repeat="0-1">
        extensión
        <ruleref uri="#PhoneNumber_Extension" />
        <tag>
            out.Extension = new Object();
            out._value = out._value + "x" + rules.latest()._value;
            out.Extension._value = rules.latest()._value;
        </tag>
    </item>
  </rule>
  <rule id="PhoneNumber_Mexico" scope="public">
    <example> tres tres dos dos dos dos dos dos dos dos </example>
    <tag>
        out._value = '';
    </tag>
    <one-of>
        <item>
            <item repeat="0-1">
                <item repeat="0-1">
                    <ruleref uri="#PhoneNumber_Mexico_Mobile_International_Prefix" />
                    <tag>
                        out._value = out._value + rules.latest()._value;
                    </tag>
                </item>
                <ruleref uri="#PhoneNumber_Mexico_AreaCode_2" />
                <tag>
                    out.AreaCode = new Object();
                    out._value = out._value + rules.latest()._value;
                    out.AreaCode._value = rules.latest()._value;
                </tag>
            </item>
            <ruleref uri="#PhoneNumber_Mexico_LocalNumber_8" />
            <tag>
                out.LocalNumber = new Object();
                out._value = out._value + rules.latest()._value;
                out.LocalNumber._value = rules.latest()._value;
            </tag>
        </item>
        <item>
            <item repeat="0-1">
                <item repeat="0-1">
                    <ruleref uri="#PhoneNumber_Mexico_Mobile_International_Prefix" />
                    <tag>
                        out._value = out._value + rules.latest()._value;
                    </tag>
                </item>
                <ruleref uri="#PhoneNumber_Mexico_AreaCode_3" />
                <tag>
                    out.AreaCode = new Object();
                    out._value = out._value + rules.latest()._value;
                    out.AreaCode._value = rules.latest()._value;
                </tag>
            </item>
            <ruleref uri="#PhoneNumber_Mexico_LocalNumber_7" />
            <tag>
                out.LocalNumber = new Object();
                out._value = out._value + rules.latest()._value;
                out.LocalNumber._value = rules.latest()._value;
            </tag>
        </item>
    </one-of>
  </rule>
  <rule id="PhoneNumber_Mexico_Mobile_International_Prefix" scope="public">
        <one-of>
            <item>
                cero cuatro cuatro
                <tag> out._value = '044'; </tag>
            </item>
            <item>
                cero cuarenta y cuatro
                <tag> out._value = '044'; </tag>
            </item>
            <item>
                cero cuatro cinco
                <tag> out._value = '045'; </tag>
            </item>
            <item>
                cero cuarenta y cinco
                <tag> out._value = '045'; </tag>
            </item>
            <item>
                cero
                <ruleref uri="#Cardinal_1" />
                <tag> out._value = '01'; </tag>
            </item>
            <item>
                más cincuenta y dos
                <tag> out._value = '+52'; </tag>
            </item>
            <item>
                más cincuenta y dos uno
                <tag> out._value = '+521'; </tag>
            </item>
        </one-of>
  </rule>
  <rule id="PhoneNumber_Mexico_AreaCode_2" scope="public">
    <tag> out._value = ''; </tag>
    <ruleref uri="#DigitBlock_2Digits" />
    <tag> out._value = out._value + rules.latest()._value; </tag>
  </rule>
  <rule id="PhoneNumber_Mexico_AreaCode_3" scope="public">
    <tag> out._value = ''; </tag>
    <ruleref uri="#DigitBlock_3Digits" />
    <tag> out._value = out._value + rules.latest()._value; </tag>
  </rule>
  <rule id="PhoneNumber_Mexico_LocalNumber_7" scope="public">
    <tag> out._value = ''; </tag>
    <item>
        <ruleref uri="#DigitBlock_3Digits" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#DigitBlock_4Digits" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
    </item>
  </rule>
  <rule id="PhoneNumber_Mexico_LocalNumber_8" scope="public">
    <tag> out._value = ''; </tag>
    <item>
        <ruleref uri="#DigitBlock_4Digits" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
        <ruleref uri="#DigitBlock_4Digits" />
        <tag> out._value = out._value + rules.latest()._value; </tag>
    </item>
  </rule>

  <rule id="PhoneNumber" scope="public">
    <item>
        <one-of>
            <item>
                <ruleref uri="#PhoneNumber_Mexico_with_Extension"/>
            </item>
            <item>
                <ruleref uri="#PhoneNumber_US_with_Extension"/>
            </item>
            <item>
                <ruleref uri="#PhoneNumber_Extension"/>
            </item>
        </one-of>
    </item>
    <tag> out = rules.latest(); </tag>
  </rule>
</grammar>
